// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package sqlc

import (
	"context"
)

const getListings = `-- name: GetListings :many
SELECT id, address, floor_area, price
FROM listings
LIMIT $1::int
`

func (q *Queries) GetListings(ctx context.Context, rowLimit int32) ([]Listing, error) {
	rows, err := q.db.Query(ctx, getListings, rowLimit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Listing
	for rows.Next() {
		var i Listing
		if err := rows.Scan(
			&i.ID,
			&i.Address,
			&i.FloorArea,
			&i.Price,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
