// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: listing_images.sql

package db

import (
	"context"
)

const getListingImagesByListingIds = `-- name: GetListingImagesByListingIds :many
SELECT id, listing_id, url
FROM listing_images
WHERE listing_id = ANY ($1::bigint[])
`

func (q *Queries) GetListingImagesByListingIds(ctx context.Context, ids []int64) ([]*ListingImage, error) {
	rows, err := q.db.Query(ctx, getListingImagesByListingIds, ids)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []*ListingImage
	for rows.Next() {
		var i ListingImage
		if err := rows.Scan(&i.ID, &i.ListingID, &i.Url); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const insertListingImages = `-- name: InsertListingImages :exec
INSERT INTO listing_images (listing_id, url)
VALUES (unnest($1::bigint[]), unnest($2::text[]))
`

type InsertListingImagesParams struct {
	ListingIds []int64
	Urls       []string
}

func (q *Queries) InsertListingImages(ctx context.Context, arg InsertListingImagesParams) error {
	_, err := q.db.Exec(ctx, insertListingImages, arg.ListingIds, arg.Urls)
	return err
}
