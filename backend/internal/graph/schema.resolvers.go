package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.70

import (
	"context"
	"homagochi/internal/db"
)

// FloorArea is the resolver for the floorArea field.
func (r *listingResolver) FloorArea(ctx context.Context, obj *db.Listing) (float64, error) {
	floatValue, err := obj.FloorArea.Float64Value()
	if err != nil {
		return 0, err
	}

	return floatValue.Float64, nil
}

// Listings is the resolver for the listings field.
func (r *queryResolver) Listings(ctx context.Context, limit int32) ([]*db.Listing, error) {
	pool, err := db.Connect(ctx)
	if err != nil {
		return nil, err
	}
	defer pool.Close()

	repository := db.NewListingsRepository()
	return repository.GetListings(ctx, pool, limit)
}

// Listing returns ListingResolver implementation.
func (r *Resolver) Listing() ListingResolver { return &listingResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type listingResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
